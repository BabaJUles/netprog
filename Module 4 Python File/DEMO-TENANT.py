#!/usr/bin/env python
'''
Autogenerated code using arya.py
Original Object Document Input: 
{
  "imdata": [
    {
      "fvTenant": {
        "attributes": {
          "descr": "", 
          "dn": "uni/tn-DEMO", 
          "name": "DEMO", 
          "nameAlias": "", 
          "ownerKey": "", 
          "ownerTag": ""
        }, 
        "children": [
          {
            "vnsSvcCont": {
              "attributes": {}
            }
          }, 
          {
            "fvRsTenantMonPol": {
              "attributes": {
                "tnMonEPGPolName": ""
              }
            }
          }
        ]
      }
    }
  ], 
  "totalCount": "1"
}

'''

# list of packages that should be imported for this code to work
import cobra.mit.access
import cobra.mit.request
import cobra.mit.session
import cobra.model.fv
import cobra.model.pol
import cobra.model.vns
from cobra.internal.codec.xmlcodec import toXMLStr

# log into an APIC and create a directory object
ls = cobra.mit.session.LoginSession('https://10.10.20.70', 'admin', 'ciscopsdt')
md = cobra.mit.access.MoDirectory(ls)
md.login()

# the top level object on which operations will be made
polUni = cobra.model.pol.Uni('')

# build the request using cobra syntax
fvTenant = cobra.model.fv.Tenant(polUni, ownerKey=u'', name=u'DEMO', descr=u'', nameAlias=u'', ownerTag=u'')
vnsSvcCont = cobra.model.vns.SvcCont(fvTenant)
fvRsTenantMonPol = cobra.model.fv.RsTenantMonPol(fvTenant, tnMonEPGPolName=u'')


# commit the generated code to APIC
print toXMLStr(polUni)
c = cobra.mit.request.ConfigRequest()
c.addMo(fvTenant)
md.commit(c)

